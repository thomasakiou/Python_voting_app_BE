"""Initial migration

Revision ID: a6838b828b16
Revises: 
Create Date: 2025-10-17 10:17:44.266439

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a6838b828b16'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('candidates')
    op.drop_table('offices')
    op.drop_table('users')
    op.drop_table('votes')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('votes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('user_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('office_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('office_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('candidate_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('candidate_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['candidate_code'], ['candidates.candidate_code'], name=op.f('votes_candidate_code_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['office_code'], ['offices.office_code'], name=op.f('votes_office_code_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('votes_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('votes_pkey')),
    sa.UniqueConstraint('user_id', 'office_code', name=op.f('unique_vote_per_office'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('must_change_password', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('super-admin', 'admin', 'voter', name='user_roles'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('username', name=op.f('users_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('offices',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('offices_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('office_code', sa.VARCHAR(length=6), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='offices_pkey'),
    sa.UniqueConstraint('office_code', name='offices_office_code_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('candidates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('candidate_code', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('office_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['office_code'], ['offices.office_code'], name=op.f('candidates_office_code_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('candidates_pkey')),
    sa.UniqueConstraint('candidate_code', name=op.f('candidates_candidate_code_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
